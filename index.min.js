import e,{useRef as r,createContext as t,useContext as n,useState as s,useEffect as c,useCallback as u}from"react";const i=t({}),{Provider:o}=i,a=(e,r)=>r?"function"==typeof r?r(e):r.split(".").reduce((e,r)=>e[r],e):e,f=(e,r,t)=>{if(!r)return t;const[n,...s]=r.split("."),c=s.join("."),u=c?f(e[n],c,t):t;if(Array.isArray(e)){return e.map((e,r)=>r===parseInt(n)?u:e)}return{...e,[n]:u}},p=e=>{if("object"!=typeof e)return e;if(Object.isFrozen(e))return e;for(let r of Object.getOwnPropertyNames(e))Array.isArray(e)&&"length"===r||(e[r]="object"==typeof e[r]?p(e[r]):e[r]);return Object.freeze(e)},l=(e,r,t)=>{const n=a(e.current,r),s=n=>{const s=a(e.current,r);for(;"function"==typeof n;)n=n(p(s));return n&&n.then?n.then(t):t(n)};if(Array.isArray(n)){const e=e=>{s(r=>{const t=r.slice();return e(t),t})};s.fill=(...r)=>e(e=>e.fill(...r)),s.pop=(...r)=>e(e=>e.pop(...r)),s.push=(...r)=>e(e=>e.push(...r)),s.reverse=(...r)=>e(e=>e.reverse(...r)),s.shift=(...r)=>e(e=>e.shift(...r)),s.sort=(...r)=>e(e=>e.sort(...r)),s.splice=(...r)=>e(e=>e.splice(...r)),s.unshift=(...r)=>e(e=>e.unshift(...r)),s.concat=(...e)=>s(r=>r.concat(...e)),s.slice=(...e)=>s(r=>r.slice(...e)),s.filter=(...e)=>s(r=>r.filter(...e)),s.map=(...e)=>s(r=>r.map(...e)),s.reduce=(...e)=>s(r=>r.reduce(...e)),s.reduceRight=(...e)=>s(r=>r.reduceRight(...e)),s.append=s.push,s.prepend=s.unshift,s.remove=e=>s.splice(Number(e),1)}else"object"==typeof n&&(s.assign=(...e)=>s(Object.assign({},n,...e)),s.remove=(...e)=>s(((e,r)=>{const t={};for(let n in e)r.includes(n)||(t[n]=e[n]);return t})(n,e)),s.extend=s.assign);return s.add=e=>s(r=>r+e),s},h=(e=(e=>e))=>{const{state:t,subscribe:u}=n(i),o=r();o.current=a(t.current,e);const[,f]=s();return c(()=>u(r=>{try{const r=a(t.current,e);if(o.current===r)return}catch(e){}f({})}),[e]),p(o.current)},d=e=>{h(e);const{state:r,setState:t}=n(i),s=l(r,e,n=>{t(f(r.current,e,n))});return u(s,[e])},y=e=>{const{state:r,setState:t}=n(i),s=h(e),c=l(r,e,n=>{t(f(r.current,e,n))});return[s,u(c,[e])]};export default({children:t,...n})=>{const s=r(n),c=[];return e.createElement(o,{value:{state:s,setState:e=>{const r=s.current;s.current=e,c.slice().reverse().forEach(e=>{e(r)})},subscribe:e=>(c.push(e),()=>c.splice(c.findIndex(r=>r===e),1))}},t)};export{i as Context,d as useActions,h as useSelector,y as useStore};
